#Exercise_1
# Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их
# деление. Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на
# ноль.

# a, b = int(input('Введите первое число: ')), int(input('Введите второе число: '))
# def numbers():
#     if b != 0:
#         c = a/b
#         print(c)
#     else:
#         print("На ноль делить нельзя!")
# numbers()


#Exercise_2
# Выполнить функцию, которая принимает несколько параметров, описывающих данные
# пользователя: имя, фамилия, год рождения, город проживания, email, телефон. Функция
# должна принимать параметры как именованные аргументы. Осуществить вывод данных о
# пользователе одной строкой.

# def people(first_name, last_name, year, city, email, phone):
#     print(f'Имя Фамилия: {first_name} {last_name}. Год рождения: {year}. Город проживания: {city}. Ваш email: {email}. Номер телефона: {phone}. ')
# people(first_name = 'Ivan', last_name = 'Nikitin', year = '1991', city = 'Minsk', email = 'ivan@mail.ru', phone = '+375299229954')

#Exercise_3
# Реализовать функцию my_func(), которая принимает три позиционных аргумента и
# возвращает сумму наибольших двух аргументов.

# a, b, c = int(input('Введите первое число: ')), int(input('Введите второе число: ')), int(input('Введите третье число: '))
# def my_func(a, b, c):
#     if a >= c and b>= c:
#         return a + b
#     elif b >= a and c >= a:
#         return b + c
#     elif a >= b and c >= b:
#         return a + c
# rez = my_func(a, b, c)
# print(f'Результат суммы двух наибольших значений: {rez}')
# my_func(a, b, c)


#Exercise_4
# Программа принимает действительное положительное число x и целое отрицательное число
# y. Выполните возведение числа x в степень y. Задание реализуйте в виде функции
# my_func(x, y). При решении задания нужно обойтись без встроенной функции возведения
# числа в степень.
# Подсказка: попробуйте решить задачу двумя способами. Первый — возведение в степень с
# помощью оператора **. Второй — более сложная реализация без оператора **,
# предусматривающая использование цикла.

# №1
# x, y = int(input('Введите число: ')), int(input("Введите степень: "))
# def my_func(x, y):
#     z = x**y
#     print(z)
# my_func(x, y)

# №2
# x, y = int(input('Введите число: ')), int(input("Введите степень: "))
# def my_func(x, y):
#     rez = 1
#     for i in range(y):
#         rez *= x
#     print(rez)
# my_func(x, y)


#Exercise_5

# Программа запрашивает у пользователя строку чисел, разделённых пробелом. При нажатии
# Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделённых пробелом и снова нажать Enter. Сумма вновь введённых чисел будет
# добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введён после нескольких чисел, то вначале нужно добавить сумму
# этих чисел к полученной ранее сумме и после этого завершить программу.

# num = 0
# try:
#     while num != "*":
#         for i in map(int,input("Введите числа: ").split()):
#             num += i
#         print(f"Сумма чисел: {num}. Для завершения программы введите '*'.")
# except ValueError:
#     print(num)

#Exercise_6
# Реализовать функцию int_func(), принимающую слова из маленьких латинских букв и
# возвращающую их же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.


# x = input('Введите слово: ')
# def int_func(x):
#     print(x.title())
# int_func(x)

#Exercise_7
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделённых
# пробелом. Каждое слово состоит из латинских букв в нижнем регистре. Нужно сделать вывод
# исходной строки, но каждое слово должно начинаться с заглавной буквы. Используйте
# написанную ранее функцию int_func().

# x = input('Введите слова: ')
# def int_func(x):
#     print(x.title())
# int_func(x)